{
  "name": "domain",
  "version": "0.0.1",
  "description": "Domain development , DDD-CRS framework for node.js .",
  "main": "index",
  "scripts": {
    "test": "echo \"Error: no test specified\" && exit 1"
  },
  "dependencies": {
    "node-uuid": ">=0.0.1",
    "q": "~1.0.0"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/brighthas/jsdm.git"
  },
  "author": {
    "name": "brighthas"
  },
  "license": "MIT",
  "directories": {
    "test": "test"
  },
  "devDependencies": {
    "should": ">=0.0.1"
  },
  "keywords": [
    "cqrs",
    "ddd",
    "domain",
    "ioc",
    "di"
  ],
  "bugs": {
    "url": "https://github.com/brighthas/jsdm/issues"
  },
  "homepage": "https://github.com/brighthas/jsdm",
  "readme": "Note:\r\n====\r\n  please wait docs and apidoc.\r\n\r\nJSDM\r\n====\r\n\r\nDomain development , DDD-CRS framework for node.js and  browser's component/component  framework .\r\n\r\nNode.js  Install \r\n==================\r\n        \r\n\t\tnpm install jsdm\r\n\r\nComponent  Install \r\n====================\r\n        \r\n\t\tcomponent install brighthas/jsdm\r\n        \r\n\r\ndomain mean?\r\n============\r\n\r\n    domain is a black box , outside operate must use domain.exec function.\r\n    \r\n    domain inside include  Aggre, EventHandle, Service and CommandHandle.\r\n    \r\n    domain.exec ---> command handle ---> serivce / Aggre object (generate events) ---> event handle\r\n    \r\n\r\nstep 1. define Aggre\r\n=====================\r\n\r\n```javascript    \r\n\r\n    // User.js\r\n    \r\n    module.exports = wrap;\r\n    \r\n    function wrap(my){\r\n        \r\n            function User(name){\r\n                this._name = name;\r\n            }\r\n            \r\n            User.prototype = {\r\n                getName:function(){\r\n                   return this._name;\r\n                },\r\n                changeName:function(name){\r\n                    this._name = name;\r\n                    my.publish(\"user.\"+this.id+\".changeName\",name);\r\n                    my.publish(\"user.*.changeName\",this.id,name);\r\n                }\r\n            }\r\n            User.className = \"User\";\r\n            return User;\r\n    }\r\n        \r\n        \r\n        \r\n```    \r\n\r\nstep 2. define user repository\r\n==============================\r\n\r\n```javascript\r\n\r\n// user_repo.js\r\n    moduel.exports = wrap\r\n    \r\n        // define aggre repository\r\n        function wrap(my){\r\n        \r\n            var repository = new Repository(\"User\");\r\n            var User = Aggres.User;\r\n            \r\n            // repository is Repository instance , must implement _create/_data2aggre/_aggre2data\r\n            repository._create = function(data,callback){\r\n                var user = new User(data.name);\r\n                callback(undefined,user);\r\n            }\r\n            \r\n            repository._data2aggre = function(data){\r\n                var user = new User(data.name);\r\n                user.id = data.id;\r\n                return user;\r\n            }\r\n            \r\n            repository._aggre2data = function(aggre){\r\n                var data = {\r\n                    name:aggre.getName(),\r\n                    id:aggre.id\r\n                }\r\n                return data;\r\n            }\r\n            \r\n            return repository;\r\n            \r\n        }\r\n        \r\n```\r\nstep 3. define command handle   \r\n==============================\r\n\r\n```javascript\r\n    \r\n    // handle.js\r\n    \r\n        function wrap(my){\r\n        \r\n            // define command handle 1\r\n            function handle1(args,callback){\r\n                var repo = my.repos.user;\r\n                repo.get(args.id,function(err,user){\r\n                    user.changeName(args.name);\r\n                    callback();\r\n                })\r\n            }\r\n            handle1.commandName = \"change user name\";        \r\n        \r\n            // define command handle 2\r\n            function handle2(args,callback){\r\n                var repo = my.repos.user;\r\n                repo.create({name:args.name},callback)\r\n            }\r\n            handle2.commandName = \"create a user\"; \r\n            \r\n            return [handle1,handle2];\r\n           \r\n        }\r\n        \r\n        module.exports = wrap;\r\n\r\n```\r\n    \r\nstep 4.  register and run\r\n==========================\r\n\r\n```javascript\r\n    \r\n   var domain = require(\"jsdm\")();\r\n   var UserClass = require(\"./User\"),\r\n       user_repo = require(\"./user_repo\"),\r\n       handles = require(\"./handle\");\r\n       \r\n   domain.register(\"AggreClass\",UserClass)\r\n         .register(\"repository\",user_repo)\r\n         .register(\"commandHandle\",handles)\r\n         .seal();\r\n\r\n   domain.exec(\"create a user\",{name:\"bright.has\"},function(){\r\n    console.log(\"lol\")\r\n   })\r\n         \r\n```\r\ndomain.register\r\n================\r\n```javascript\r\n   domain.register(\"AggreClass\",UserClass)\r\n         .register(\"repository\",user_repo)\r\n         .register(\"commandHandle\",handles)\r\n         .seal();\r\n```\r\nor\r\n```javascript\r\n   domain.register(\"AggreClass\",UserClass,\"repository\",user_repo,\"commandHandle\",handles)\r\n         .seal();\r\n```\r\n\r\n\r\n",
  "readmeFilename": "README.md",
  "_id": "domain@0.2.8",
  "_shasum": "c52578e7d619628bb7efc5169c0b7d75b32c8e3a",
  "_from": "domain@0.2.8",
  "_resolved": "https://registry.npmjs.org/domain/-/domain-0.2.8.tgz"
}
